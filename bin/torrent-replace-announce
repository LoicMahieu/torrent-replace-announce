#!/usr/bin/env node

var path = require('path');
var fs = require('fs');
var glob = require('glob');
var minimist = require('minimist');
var mkdirp = require('mkdirp');
var parseTorrent = require('parse-torrent');
var torrentReplaceAnnounce = require('../lib/torrentReplaceAnnounce');

var argv = minimist(process.argv.slice(2), {
  alias: { search: 's', replacement: 'r', h: 'help',
           output: 'o', dry: 'd'
         },
  string: ['s', 'r', 'p'],
  boolean: ['d']
});

if (argv.help || !argv.s || !argv.r) return usage(0);

if (!argv.dry && argv.output) {
  mkdirp.sync(argv.output);
}

argv._.forEach(function (file) {
  var torrent = parseTorrent(fs.readFileSync(file));
  var changed = torrentReplaceAnnounce(torrent, argv.s, argv.r);

  if (changed) {
    var newTorrent = parseTorrent.toTorrentFile(torrent);
    var newFile = path.join(
      (argv.output ? argv.output : path.dirname(file)),
      path.basename(file)
    );

    if (!argv.dry) {
      fs.writeFileSync(newFile, newTorrent);
    }

    console.log('File writed: %s', newFile);
  }
});

function usage (code) {
  var r = fs.createReadStream(__dirname +'/usage.txt');
  r.pipe(process.stdout);
  r.on('end', function () {
    if (code) process.exit(code);
  });
}
